{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\r\nfrom vex import *\r\nimport urandom\r\n\r\n# Brain should be defined by default\r\nbrain=Brain()\r\n\r\n# Robot configuration code\r\nbrain_inertial = Inertial()\r\ncontroller = Controller()\r\nmotor_left = Motor(Ports.PORT1, False)\r\nmotor_right = Motor(Ports.PORT6, True)\r\nmotor_spin = Motor(Ports.PORT2, True)\r\nmotor_shoot = Motor(Ports.PORT3, False)\r\nmotor_middle = Motor(Ports.PORT5, False)\r\nelevator = Motor(Ports.PORT4, False)\r\n#endregion VEXcode Generated Robot Configuration\r\n\r\n# ------------------------------------------\r\n\r\n# Project: VEXcode Project\r\n# Author: Rawi N\r\n# Created: 22/1/2023\r\n# Description: VEXcode.py\r\n\r\n# ------------------------------------------\r\n\r\n\r\n\r\n \r\n\r\n\r\n# ▀█░█▀ █▀▀█ █░░ █░░█ █▀▀█ █▀▀▄ █░░ █▀▀ \r\n# ░█▄█░ █▄▄█ █░░ █░░█ █▄▄█ █▀▀▄ █░░ █▀▀ \r\n# ░░▀░░ ▀░░▀ ▀▀▀ ░▀▀▀ ▀░░▀ ▀▀▀░ ▀▀▀ ▀▀▀\r\n\r\n# ------------------------------------\r\nx=1\r\ndetect = 0\r\nmotor4speed = 100\r\nliftspeed = 100\r\nelevatordegrees = 170\r\nnon = 0\r\nt = 0\r\nshoot = 0\r\nplaceholder = 0\r\nchangemode = 0\r\ntd = 1\r\n\r\n\r\nfrom vex import *\r\nimport time \r\n\r\n\r\n# █▀▀ █▀▀ ▀▀█▀▀ █░░█ █▀▀█ \r\n# ▀▀█ █▀▀ ░░█░░ █░░█ █░░█ \r\n# ▀▀▀ ▀▀▀ ░░▀░░ ░▀▀▀ █▀▀▀\r\n\r\n\r\nmotor_spin.set_velocity(motor4speed, PERCENT)\r\nbrain_inertial.set_heading(0, DEGREES)\r\nmotor_middle.set_position(0,DEGREES)\r\nmotor_middle.set_position(0,DEGREES)\r\nmotor_left.set_stopping(BRAKE)\r\nmotor_right.set_stopping(BRAKE)\r\n\r\n\r\n\r\n\r\n# █▀▀▄ █▀▀█ ░▀░ ▀█░█▀ ░▀░ █▀▀▄ █▀▀▀ 　 █▀▀▄ █▀▀ █▀▀ \r\n# █░░█ █▄▄▀ ▀█▀ ░█▄█░ ▀█▀ █░░█ █░▀█ 　 █░░█ █▀▀ █▀▀ \r\n# ▀▀▀░ ▀░▀▀ ▀▀▀ ░░▀░░ ▀▀▀ ▀░░▀ ▀▀▀▀ 　 ▀▀▀░ ▀▀▀ ▀░░\r\n\r\n\r\n\r\n#left and right\r\ndef drive(lspeed, rspeed):\r\n    motor_left.set_velocity(lspeed,PERCENT)\r\n    motor_right.set_velocity(rspeed,PERCENT)\r\n\r\n\r\ndef backcount():\r\n    motor_left.set_position(0,DEGREES)\r\n    motor_right.set_position(0,DEGREES)\r\n    if controller.axisA.position() > 30 and controller.axisC.position() < -30:\r\n        \r\n        motor_left.set_velocity(controller.axisA.position()+30,PERCENT)\r\n        motor_right.set_velocity(controller.axisA.position(),PERCENT)\r\n\r\n    \r\n    elif controller.axisA.position() > 30 and controller.axisC.position() > 30:\r\n    \r\n        motor_left.set_velocity(controller.axisA.position(),PERCENT)\r\n        motor_right.set_velocity(controller.axisA.position()+30,PERCENT)\r\n    elif (controller.axisA.position()<-10):\r\n        A = controller.axisA.position() \r\n        left = motor_left.position(DEGREES)\r\n        right = motor_right.position(DEGREES)\r\n        mo = left-right\r\n        if mo>2:\r\n            motor_left.set_velocity(A+5,PERCENT) \r\n            motor_right.set_velocity(A,PERCENT)      #left over\r\n\r\n\r\n        elif mo<2:\r\n            motor_left.set_velocity(A,PERCENT) \r\n            motor_right.set_velocity(A+5,PERCENT)            #right over\r\n\r\n\r\n        else:\r\n            print(\"forwardnew\")\r\n            motor_left.set_velocity(A,PERCENT)\r\n            motor_right.set_velocity(A,PERCENT)\r\n\r\n        motor_left.spin(FORWARD)\r\n        motor_right.spin(FORWARD)\r\n\r\n\r\n\r\n\r\n#forward new\r\ndef drivefrontcount():\r\n    motor_left.set_position(0,DEGREES)\r\n    motor_right.set_position(0,DEGREES)\r\n    if controller.axisA.position() > 30 and controller.axisC.position() < -30:\r\n        \r\n        motor_left.set_velocity(controller.axisA.position()-30,PERCENT)\r\n        motor_right.set_velocity(controller.axisA.position(),PERCENT)\r\n\r\n    \r\n    elif controller.axisA.position() > 30 and controller.axisC.position() > 30:\r\n    \r\n        motor_left.set_velocity(controller.axisA.position(),PERCENT)\r\n        motor_right.set_velocity(controller.axisA.position()-30,PERCENT)\r\n    elif (controller.axisA.position()>10):\r\n        A = controller.axisA.position()\r\n        left = motor_left.position(DEGREES)\r\n        right = motor_right.position(DEGREES)\r\n        mo = left-right\r\n        if mo>2:\r\n            motor_left.set_velocity(A-5,PERCENT) \r\n            motor_right.set_velocity(A,PERCENT)      #left over\r\n\r\n\r\n        elif mo<2:\r\n            motor_left.set_velocity(A,PERCENT) \r\n            motor_right.set_velocity(A-5,PERCENT)            #right over\r\n\r\n\r\n        else:\r\n            print(\"forwardnew\")\r\n            motor_left.set_velocity(A,PERCENT)\r\n            motor_right.set_velocity(A,PERCENT)\r\n\r\n        motor_left.spin(FORWARD)\r\n        motor_right.spin(FORWARD)\r\n            \r\n\r\n\r\n# # gyro forward\r\n# def DriveForward():\r\n#     GR_forDrive = brain_inertial.rotation()\r\n  \r\n#     while (controller.axisA.position()>10):\r\n#         rotat = brain_inertial.rotation()\r\n#         print(GR_forDrive-rotat)\r\n#         A = controller.axisA.position()\r\n#         if(rotat-GR_forDrive>3): #RIGHT\r\n#             motor_left.set_velocity(A/2,PERCENT)\r\n#             motor_right.set_velocity(A/3,PERCENT)\r\n#         elif(rotat-GR_forDrive<-3): #LEFT\r\n#             motor_left.set_velocity(A/3,PERCENT)\r\n#             motor_right.set_velocity(A/2,PERCENT)\r\n#         else:\r\n#             motor_left.set_velocity(A/1.2,PERCENT)\r\n#             motor_right.set_velocity(A/1.2,PERCENT)\r\n\r\n#         motor_left.spin(FORWARD)\r\n#         motor_right.spin(FORWARD)\r\n       \r\n# gyro backward\r\n\r\n# def DriveBackward():\r\n#     GR_forDrive = brain_inertial.rotation()\r\n#     while (controller.axisA.position()<-10):\r\n#         rotat = brain_inertial.rotation()\r\n#         print(GR_forDrive-rotat)\r\n#         A = controller.axisA.position()\r\n#         if(rotat-GR_forDrive>3): #RIGHT\r\n#             motor_left.set_velocity(A/3,PERCENT)\r\n#             motor_right.set_velocity(A/2,PERCENT)\r\n#         elif(rotat-GR_forDrive<-3): #LEFT\r\n#             motor_left.set_velocity(A/2,PERCENT)\r\n#             motor_right.set_velocity(A/3,PERCENT)\r\n#         else:\r\n#             motor_left.set_velocity(A/1.2,PERCENT)\r\n#             motor_right.set_velocity(A/1.2,PERCENT)\r\n\r\n#         motor_left.spin(FORWARD)\r\n#         motor_right.spin(FORWARD)\r\n        \r\n        \r\n\r\n\r\n       \r\n   \r\n\r\n\r\n\r\n# █▀▄▀█ █▀▀█ ░▀░ █▀▀▄ 　 █▀▀ █▀▀█ █▀▀▄ █▀▀ \r\n# █░▀░█ █▄▄█ ▀█▀ █░░█ 　 █░░ █░░█ █░░█ █▀▀ \r\n# ▀░░░▀ ▀░░▀ ▀▀▀ ▀░░▀ 　 ▀▀▀ ▀▀▀▀ ▀▀▀░ ▀▀▀\r\n\r\ndef main():\r\n        #ตั้งความเร็วตามคันโยก\r\n        a =controller.axisA.position()\r\n        c = controller.axisC.position() / 1.5\r\n        \r\n        if controller.axisA.position() >= 10 :\r\n            #forward  เดินหน้า\r\n          \r\n            drivefrontcount()\r\n            \r\n        elif controller.axisA.position() <= -10:\r\n            #  backward ถอยหลัง\r\n            backcount()\r\n            \r\n\r\n                \r\n            \r\n        elif controller.axisC.position() >= 10 or controller.axisC.position() <= -10:\r\n            #right and left เลี้ยวซ้ายและเลี้ยวขวา\r\n            drive(c, c*(-1))\r\n            print(\"turn\")\r\n\r\n            print(c)\r\n\r\n        \r\n        #Reset position\r\n        elif controller.buttonLDown.pressing():\r\n            motor_middle.set_velocity(100, PERCENT)\r\n            elevator.set_velocity(100, PERCENT)\r\n            motor_middle.spin_to_position(0,DEGREES,wait=True)\r\n            elevator.spin_to_position(0,DEGREES,wait=True)\r\n        \r\n\r\n      \r\n        else:\r\n            #stop\r\n            #สั่งมอเตอร์หยุด\r\n            print(\"maincode\")\r\n            motor_left.set_velocity(0,PERCENT)\r\n            motor_right.set_velocity(0,PERCENT)\r\n\r\n        # ไม่ต้องสนใจ\r\n        motor_left.spin(FORWARD)\r\n        motor_right.spin(FORWARD)\r\n            \r\n   \r\n            \r\n           \r\n\r\n\r\n  \r\n\r\n    \r\n            \r\n       \r\n\r\n# ░█████╗░██████╗░██████╗░░░░░░░░█████╗░███╗░░██╗  ███╗░░░███╗░█████╗░████████╗░█████╗░██████╗░\r\n# ██╔══██╗██╔══██╗██╔══██╗░░░░░░██╔══██╗████╗░██║  ████╗░████║██╔══██╗╚══██╔══╝██╔══██╗██╔══██╗\r\n# ███████║██║░░██║██║░░██║█████╗██║░░██║██╔██╗██║  ██╔████╔██║██║░░██║░░░██║░░░██║░░██║██████╔╝\r\n# ██╔══██║██║░░██║██║░░██║╚════╝██║░░██║██║╚████║  ██║╚██╔╝██║██║░░██║░░░██║░░░██║░░██║██╔══██╗\r\n# ██║░░██║██████╔╝██████╔╝░░░░░░╚█████╔╝██║░╚███║  ██║░╚═╝░██║╚█████╔╝░░░██║░░░╚█████╔╝██║░░██║\r\n# ╚═╝░░╚═╝╚═════╝░╚═════╝░░░░░░░░╚════╝░╚═╝░░╚══╝  ╚═╝░░░░░╚═╝░╚════╝░░░░╚═╝░░░░╚════╝░╚═╝░░╚═╝\r\n\r\n\r\n\r\n# █▀█ █░█ █▀█ █▀█ █░░ █▀▀\r\n# █▀▀ █▄█ █▀▄ █▀▀ █▄▄ ██▄\r\n\r\ndef spinpurple():\r\n    if controller.buttonRDown.pressing():\r\n        motor_spin.set_velocity(100,PERCENT)\r\n        motor_spin.spin(REVERSE) \r\n    elif controller.buttonR3.pressing():\r\n        motor_spin.set_velocity(100,PERCENT)\r\n        motor_spin.spin(FORWARD)\r\n\r\n# █▀ █░█ █▀█ █▀█ ▀█▀ █▀▀ █▀█\r\n# ▄█ █▀█ █▄█ █▄█ ░█░ ██▄ █▀▄\r\n\r\ndef shot():\r\n\r\n    if controller.buttonRUp.pressing():\r\n        global shoot\r\n        \r\n        if shoot %2 == 1:\r\n            motor_shoot.set_velocity(3,PERCENT)\r\n            motor_shoot.spin(REVERSE)\r\n            print(shoot)\r\n            while controller.buttonRUp.pressing(): \r\n                pass\r\n            \r\n            \r\n                \r\n        else:\r\n            motor_shoot.set_velocity(100,PERCENT)\r\n            motor_shoot.spin(FORWARD)\r\n            print(shoot)\r\n            while controller.buttonRUp.pressing(): \r\n                pass\r\n            \r\n       \r\n        shoot = shoot + 1\r\n\r\n\r\n# █▄▄ █░░ █░█ █▀▀ ▄▄ █░░ █ █▀▀ ▀█▀\r\n# █▄█ █▄▄ █▄█ ██▄ ░░ █▄▄ █ █▀░ ░█░\r\n\r\ndef lift():\r\n    data = elevator.position(DEGREES)\r\n    print(data)\r\n    elevator.set_velocity(100,PERCENT)\r\n    #touch down\r\n    if controller.buttonL3.pressing():\r\n        td = 1\r\n        TDE.broadcast()\r\n        \r\n    else:\r\n\r\n        if controller.buttonEUp.pressing():\r\n            if data >= 90:\r\n                elevator.set_stopping(HOLD)\r\n                elevator.stop()\r\n                \r\n            else:\r\n                elevator.spin(FORWARD)\r\n            #elevator up ปุ่มกดนำลิฟท์ขึ้น\r\n\r\n     \r\n                # elevator.spin_for(REVERSE,elevatordegrees, DEGREES)\r\n\r\n        elif controller.buttonEDown.pressing():\r\n            if data <= 0:\r\n                elevator.set_stopping(HOLD)\r\n                elevator.stop()\r\n\r\n            else:\r\n                elevator.spin(REVERSE)\r\n            #elevator down ปุ่มกดนำลิฟท์ลง\r\n        \r\n       \r\n            # elevator.spin_for(FORWARD,elevatordegrees+1, DEGREES)\r\n\r\n        else:\r\n            #stop # ไม่ต้องสนใจ\r\n            elevator.set_stopping(HOLD)\r\n            elevator.stop();\r\n\r\n\r\n\r\n# █▄█ █▀▀ █░░ █░░ █▀█ █░█░█ ▄▄ █░░ █ █▀▀ ▀█▀\r\n# ░█░ ██▄ █▄▄ █▄▄ █▄█ ▀▄▀▄▀ ░░ █▄▄ █ █▀░ ░█░\r\n\r\ndef yellow():\r\n\r\n    midsta = motor_middle.position(DEGREES)\r\n    print(midsta)\r\n    if controller.buttonLUp.pressing():\r\n        motor_spin.set_velocity(100,PERCENT)\r\n        motor_middle.set_velocity(100, PERCENT)\r\n        motor_spin.spin(FORWARD)\r\n        motor_middle.spin_to_position(176,DEGREES,wait=True)\r\n        \r\n\r\n    elif controller.buttonFDown.pressing():\r\n\r\n    \r\n        #yellow collect up ปุ่มกดเพื่องัด สีเหลือง\r\n        motor_middle.set_velocity(80, PERCENT)\r\n        motor_middle.spin(FORWARD)\r\n\r\n    elif controller.buttonFUp.pressing():\r\n\r\n\r\n        #yellow collect down ปุ่มกดเพื่อไม่งัดสีเหลือง\r\n        motor_middle.set_velocity(80, PERCENT)\r\n        motor_middle.spin(REVERSE)\r\n\r\n    else:\r\n        \r\n        motor_middle.set_stopping(HOLD)\r\n        motor_middle.stop();\r\n\r\n\r\n    \r\n\r\ndef touchdown():\r\n    while td == 1:\r\n        elevator.set_velocity(100,PERCENT)\r\n        elevator.spin(FORWARD)\r\n        elevator.set_timeout(3,SECONDS)\r\n    elevator.stop()\r\n\r\n    \r\n\r\nTDE = Event()\r\nTDE(touchdown)\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n# ██╗░░░░░░█████╗░░█████╗░██████╗░\r\n# ██║░░░░░██╔══██╗██╔══██╗██╔══██╗\r\n# ██║░░░░░██║░░██║██║░░██║██████╔╝\r\n# ██║░░░░░██║░░██║██║░░██║██╔═══╝░\r\n# ███████╗╚█████╔╝╚█████╔╝██║░░░░░\r\n# ╚══════╝░╚════╝░░╚════╝░╚═╝░░░░░\r\n\r\nwhile True:\r\n  \r\n    main()\r\n    spinpurple()\r\n    shot()\r\n    lift()\r\n    yellow()\r\n\r\n    \r\n\r\n\r\n   \r\n  \r\n \r\n    \r\n\r\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"},"triportSourcePort":22},{"port":[1],"name":"motor_left","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"motor_right","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[2],"name":"motor_spin","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3],"name":"motor_shoot","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"motor_middle","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"elevator","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":1,"platform":"IQ","sdkVersion":"20230627.09.00.00","appVersion":"3.0.0","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"target":"Physical"}